# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

Description:  |
  This template deploys a VPC with a public and private subnet, a NAT Gateway is provisioned to provide
  instances in the private subnet access to services outside of the VPC. In additon, the template creates the required secutiry groups and bucket.

Parameters:
  EnvironmentName:
    Description: An environment name, the value is prepended to various resource names
    Type: String
    Default: HpcServerlessJobManagement

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet
    Type: String
    Default: 10.0.0.0/24

  PrivateSubnetCIDR1:
    Description: Please enter the IP range (CIDR notation) for the private subnet
    Type: String
    Default: 10.0.1.0/24
    
  PrivateSubnetCIDR2:
    Description: Please enter the IP range (CIDR notation) for the private subnet
    Type: String
    Default: 10.0.2.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetCIDR1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet
          
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetCIDR2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
      
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  APISG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the API
      VpcId:
        !Ref VPC
        
  APISGingress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: APISG
    Properties:
      GroupId:
        Ref: APISG
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      SourceSecurityGroupId:
        Ref: APISG
     
  # This Security Group is specified as an "AdditionalSecurityGroups" parameter in the ParallelCluster config file.   
  HeadNodeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Additional Security group for the HeadNode. Required to communicate with the Slurm API
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6830
          ToPort: 6830
          SourceSecurityGroupId: !Ref APISG
      VpcId:
        !Ref VPC
        
  # This S3 bucket is used as a repository for Slurm job scripts and ParallelCluster post install script.
  Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
         -  ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
        

Outputs:    
  HeadNodeSubnetId:
    Description: A reference to the public subnet ID
    Value: !Ref PublicSubnet

  ComputeResourcesSubnetId1:
    Description: A reference to the private subnet ID
    Value: !Ref PrivateSubnet1
    
  ComputeResourcesSubnetId2:
    Description: A reference to the private subnet ID
    Value: !Ref PrivateSubnet2
    
  APISecurityGroup:
    Description: A reference to the API Security Group
    Value: !Ref APISG
    
  HeadNodeSecurityGroup:
    Description: A reference to the HeadNode Additional Security Group
    Value: !Ref HeadNodeSG

  VPCID:
    Description: A reference to the created VPC
    Value: !Ref VPC
    
  Bucket:
    Description: S3 bucket for job scripts and post install script
    Value: !Ref Bucket
